/** REQUETES DEMANDEES PAR LE CLIENT **/ 

/* Rechercher les demandes faites après une date donnée */
SELECT * FROM DEMANDE WHERE DATEDEMANDE BETWEEN '21/08/2018' AND '04/03/2019' ;

/* Afficher les infos selon la demande donnée */
SELECT RaisonSociale, NoTournee, QuantiteEnlevee FROM DEMANDE
INNER JOIN ENTREPRISE ON DEMANDE.SIRET = ENTREPRISE.SIRET
INNER JOIN DETAILDEMANDE ON DEMANDE.NoDemande = DETAILDEMANDE.NoDemande
WHERE DEMANDE.NoDemande = 1;

/* Afficher la quantite totale recuperée par type de dechet pour un mois / année donnée */
SELECT SUM(QuantiteDeposee) FROM DETAILDEPOT
INNER JOIN TYPEDECHET ON DETAILDEPOT.NoTypeDechet = TYPEDECHET.NoTypeDechet
INNER JOIN TOURNEE ON TOURNEE.NoTournee = DETAILDEPOT.NoTournee
WHERE DATETOURNEE BETWEEN '1997-01-01' AND '1997-12-31'
GROUP BY DETAILDEPOT.NoTypeDechet;


/* afficher les employés ayant réalisé moins de n tournée, trié par nbr de tournée */
SELECT EMPLOYE.NOEMPLOYE, NOM, PRENOM, COUNT(NOTOURNEE) FROM EMPLOYE
INNER JOIN TOURNEE ON TOURNEE.NOEMPLOYE = EMPLOYE.NOEMPLOYE
GROUP BY TOURNEE.NOEMPLOYE
HAVING COUNT(NOTOURNEE) < 2;

/* afficher les infos de l'entreprise qui a réalisé plus de demande que Formalys */
SELECT RAISONSOCIALE, COUNT(NoDemande) FROM ENTREPRISE
INNER JOIN DEMANDE ON ENTREPRISE.SIRET = DEMANDE.SIRET
GROUP BY NoDemande
HAVING COUNT(NoDemande) > ((SELECT COUNT(NoDemande) FROM DEMANDE
INNER JOIN ENTREPRISE ON ENTREPRISE.SIRET = DEMANDE.SIRET
WHERE ENTREPRISE.RAISONSOCIALE = "FORMALYS"
GROUP BY NoDemande));


/* Afficher les infos des demandes qui ne sont pas encore inscrites dans une tournée */
SELECT DEMANDE.* FROM DEMANDE
INNER JOIN TOURNEE ON TOURNEE.NoTournee = DEMANDE.NoTournee
WHERE NoDemande NOT IN(SELECT NoDemande FROM DEMANDE
INNER JOIN TOURNEE ON DEMANDE.NoTournee= TOURNEE.NoTournee);
/* ou */
-- SELECT * FROM DEMANDE WHERE ID_TOURNEE IS NULL;

/* Procédure qui va permettre d'afficher les déchets collectées entre deux dates choisies sur un site et un type de déchet précis */
DELIMITER //
CREATE PROCEDURE qty_dechet_collectee_par_site_et_periode
(P_NOM_TYPE_DECHET INTEGER, P_ID_SITE INTEGER, P_DATEDEBUT DATETIME,
P_DATEFIN DATETIME)
BEGIN
SELECT SUM(QuantiteDeposee) FROM DETAILDEPOT
INNER JOIN TYPEDECHET ON DETAILDEPOT.NoTypeDechet = TYPEDECHET.NoTypeDechet
INNER JOIN TOURNEE ON TOURNEE.NoTournee = DETAILDEPOT.NoTournee
INNER JOIN ENTREPRISE ON ENTREPRISE.SIRET = DEMANDE.SIRET
INNER JOIN DEMANDE ON TOURNEE.NoTournee = DEMANDE.NoTournee
WHERE TYPEDECHET.NomTypeDechet = P_NOM_TYPE_DECHET AND 
DATETOURNEE BETWEEN P_DATEDEBUT AND P_DATEFIN
AND ENTREPRISE.SIRET = P_ID_SITE
GROUP BY NoTypeDechet;
END;
//
DELIMITER ;

/* Retrouver la quantite totale collectée pour chaque site pour un type de déchet*/
DELIMITER //
CREATE PROCEDURE qty_dechet_collectee_totale_par_periode
(P_NOM_TYPE_DECHET INTEGER, P_DATEDEBUT DATETIME, P_DATEFIN DATETIME)
BEGIN
SELECT SUM(QuantiteDeposee) FROM DETAILDEPOT
INNER JOIN TYPEDECHET ON DETAILDEPOT.NoTypeDechet = TYPEDECHET.NoTypeDechet
INNER JOIN TOURNEE ON TOURNEE.NoTournee = DETAILDEPOT.NoTournee
WHERE TYPEDECHET.NomTypeDechet = P_NOM_TYPE_DECHET AND 
DATETOURNEE BETWEEN P_DATEDEBUT AND P_DATEFIN
GROUP BY NoTypeDechet;
END;
//
DELIMITER ;

DELIMITER //
CREATE TRIGGER check_qty_deposee BEFORE INSERT ON DETAILDEPOT
FOR EACH ROW
	BEGIN
	 	SELECT SUM(QuantiteEnlevee) as TOTAL_DECHET_DEPOSE FROM DETAILDEMANDE
		INNER JOIN DEMANDE ON DETAILDEMANDE.NoDemande = DEMANDE.NoDemande
        INNER JOIN DETAILDEPOT ON DEMANDE.NoTournee = DETAILDEPOT.NoTournee
		INNER JOIN TOURNEE ON TOURNEE.NoTournee = DETAILDEPOT.NoTournee
		WHERE TOURNEE.NoTournee = NEW.NoTournee;
		IF new.DETAILDEPOT.QuantiteDeposee > TOTAL_DECHET_DEPOSE THEN
			SIGNAL SQLSTATE '22003'
			SET MESSAGE_TEXT = 'La quantité déposée ne peut pas être supérieure à la quantité prélevée lors de la tournée';
		END IF;
	END;
//
DELIMITER ;